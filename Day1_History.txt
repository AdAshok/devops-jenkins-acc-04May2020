    1  mkdir myproject-git
    2  ls
    3  cd myproject-git/
    4  ls
    5  git --version 
    6  ls -a 
    7  git init 
    8  ls -a
    9  git config --global --list 
   10  git config --global --help
   11  git config --global user.name "Amit Vashist"
   12  git config --global --list 
   13  git config --global user.email "amitvashist7@outlook.com"
   14  git config --global --list 
   15  echo "Hello World" > Hello.txt
   16  ls
   17  cat Hello.txt 
   18  git status 
   19  git add Hello.txt 
   20  git status 
   21  git rm --cached Hello.txt 
   22  git status 
   23  git add .
   24  git status 
   25  git commit 
   26  git config --global core.editor=vi
   27  git config --global core.editor vi
   28  git config --global --list 
   29  git commit 
   30  git status 
   31  git log s
   32  git logs
   33  git log
   34  git config --global user.name "Amit Kumar"
   35  git config --global user.email "amitvashist7@gmail.com"
   36  git log
   37  echo "Welcome to the world of Git" > Hello.txt 
   38  git status 
   39  git add . 
   40  git status 
   41  git commit -m "Hello file has been modified"
   42  git logs 
   43  git log
   44  history 
   45  cd 
   46  ls -a 
   47  ls
   48  cd myproject-git/
   49  ls
   50  git logs 
   51  git log 
   52  ls
   53  echo "Apple Pie"| git hash-object --stdin 
   54  echo "Apple Pie"| git hash-object --stdin -w
   55  git cat-file 23991897e13e47ed0adb91a0082c31c82fe0cbe5 -p 
   56  echo "AmitVashist"| git hash-object --stdin -w
   57  git cat-file be281455a656669930ac5fac0aa67f321d5672fe -p 
   58  ls -ltr 
   59  ls
   60  cd .git/
   61  ls
   62  cd objects/
   63  ls
   64  git cat-file 23991897e13e47ed0adb91a0082c31c82fe0cbe5-p  
   65  git cat-file 23/991897e13e47ed0adb91a0082c31c82fe0cbe5 -p 
   66  git cat-file 23991897e13e47ed0adb91a0082c31c82fe0cbe5 -p 
   67  ls
   68  cd 23 
   69  ls
   70  cd ..
   71  ls
   72  echo "AmitVashist"| git hash-object --stdin -w
   73  cd be/
   74  ls
   75  cd ..
   76  ls
   77  cd ..
   78  ls
   79  echo "AmitVashist123"| git hash-object --stdin 
   80  ls
   81  cd objects/
   82  ls
   83  echo "AmitVashist123"| git hash-object --stdin -w
   84  ls
   85  ls -R 
   86  ls
   87  cd ../../
   88  ls
   89  git logs 
   90  git log 
   91  git diff a13046f..95cd013d
   92  git diff a1..95
   93  git diff a130..95cd
   94  git diff 95cd..a130
   95  ls
   96  git branch 
   97  ls
   98  cd .git/
   99  ls
  100  cat branches/
  101  ls -ltr  branches/
  102  ls
  103  cat HEAD 
  104  cat refs/heads/master 
  105  git  logs
  106  git  log
  107  ls
  108  cd ..
  109  ls
  110  cat Hello.txt 
  111  echo "Welcome to the world of Git\n Test -1" > Hello.txt 
  112  cat Hello.txt 
  113  git status 
  114  git commit -am "modified:   Hello.txt"
  115  git  log
  116  cat .git/refs/heads/master 
  117  git show head 
  118  git show HEAD 
  119  git diff HEAD~1
  120  git diff HEAD~2
  121  git diff HEAD~3
  122  git diff HEAD~2
  123  git diff HEAD~1
  124  git diff HEAD~1..HEAD~2
  125  git diff HEAD~2
  126  ls
  127  for i in {01..10}; do echo "$i" > $i_file.txt; done 
  128  ls
  129  for i in {01..10};do echo "$i" > $i_file.txt; done 
  130  ls
  131  for i in {01..10};do echo "$i" ; done 
  132  for i in {01..10};do echo "$i" > $i ; done 
  133  ls
  134  rm -rf 0* 
  135  ls
  136  rm -rf 10
  137  ls
  138  for i in {01..10};do echo "$i" > file_$i.txt ; done 
  139  ls
  140  cat file_01.txt 
  141  cat file_02
  142  cat file_02.txt 
  143  ls
  144  git status 
  145  ls -a 
  146  rm .txt 
  147  git status 
  148  git add . ; git commit -m "New Files"
  149  ls
  150  git status 
  151  git log
  152  git show HEAD 
  153  ls
  154  rm -rf file_10.txt 
  155  ls
  156  git status 
  157  git commit -am "Files 10 has been removed manually rm -rf"
  158  git show HEAD 
  159  ls
  160  git rm file_09.txt
  161  ls
  162  git status 
  163  git commit -am "Files 09 has been removed manually rm -rf"
  164  git show HEAD 
  165  ls
  166  mv file_08.txt file.txt
  167  git status 
  168  git add . 
  169  git status 
  170  git commit -m "renamed:    file_08.txt -> file.txt"
  171  git status 
  172  ls
  173  echo "# devops-jenkins-acc-04May2020" >> README.md
  174  ls
  175  git add README.md
  176  git commit -m "README.md Added"
  177  ls
  178  git remote add origin https://github.com/amitvashisttech/devops-jenkins-acc-04May2020.git
  179  git config --list 
  180  git push 
  181  git push --set-upstream origin master
  182  ls
  183  rm -rf file*
  184  ls
  185  history > Day1_History.txt
  186  git add . ; git commit -m "Day1_History.txt" ; git push 
  187  ls
  188  cd ..
  189  ls
  190  cd myproject-git/
  191  ls
  192  git pull 
  193  ls
  194  vim .gitignore
  195  ls
  196  echo "My Creds" > creds.txt
  197  cat .gitignore 
  198  ls
  199  git status 
  200  git add . 
  201  git status 
  202  vi .gitignore 
  203  git status 
  204  git add . 
  205  git status 
  206  echo "creds.txt" > .gitignore
  207  ls -a 
  208  vim .gitignore 
  209  git add . 
  210  git status 
  211  git add . ; git commit -m "GitIgnore"; git push 
  212  ls
  213  touch .gitignore
  214  ls -a
  215  vim creds.txt 
  216  ls
  217  vim .gitignore 
  218  ls
  219  git --version 
  220  ls
  221  rm -rf creds.txt 
  222  ls
  223  git add . ; git commit -m "cred has beem removed"; git push 
  224  ls
  225  ls -a 
  226  echo "aws_creds" > aws_creds.txt
  227  ls
  228  vim .gitignore 
  229  ls
  230  vim .gitignore 
  231  ls
  232  vim .gitignore 
  233  ls
  234  cat .gitignore 
  235  git add . 
  236  git status 
  237  ls
  238  echo "GCP_Credentials" > gcp_creds.txt
  239  echo "gcp_creds.txt" >> .gitignore 
  240  ls
  241  git add . 
  242  git status 
  243  git commit -m ".gitignore modified"
  244  git push 
  245  ls
  246  git branch 
  247  git branch testing
  248  git branch 
  249  git branch devlopment
  250  git branch 
  251  git checkout devlopment
  252  git branch 
  253  cat .git/HEAD 
  254  ls
  255  rm -rf Day1_History.txt 
  256  ls
  257  echo "Welcome to the Devlopment Branch" > Dev.txt
  258  git add . ; git commit -m "Devlopment Branch"; git push 
  259  ls
  260  git branch
  261  git checkout testing
  262  ls
  263  echo "Welcome to the Testing Branch" > Test.txt
  264  git add . ; git commit -m "Testing Branch"; git push 
  265  git push --set-upstream origin testing
  266  ls
  267  git branch 
  268  git merge devlopment
  269  ls
  270  git branch 
  271  git status 
  272  git push 
  273  ls
  274  git checkout master 
  275  ls
  276  git branch 
  277* l
  278  git merge testing -m "Testing into Master"
  279  ls
  280  git push 
  281  git logs 
  282  git log
  283  ls
  284  git logs
  285  git log
  286  ls
  287  git checkout 6b4c668c9fd1cb5af7bca67b304d2eacc83764a9
  288  ls
  289  git branch 
  290  ls
  291  git checkout master
  292  ls
  293  git log 
  294  git checkout 4e5e360f031071f197f9dbc405f4b93e78bbf8c6
  295  ls
  296  git branch 
  297  git checkout master 
  298  ls
  299  git rest --soft HEAD~1
  300  git reset --soft HEAD~1
  301  ls
  302  git logs
  303  git log
  304  git reset --hard HEAD~1
  305  ls
  306  git log 
  307  git branch 
  308  ls
  309  l
  310  history 
  311  ls
  312  history > Day1_History.txt 
  313  ls
  314  git pull 
  315  git add . ; git commit -m "Day1_History.txt"
  316  git push 
  317  git pull 
  318  git rm  Day1_History.txt 
  319  ls
  320  git add . ; git commit -m "Day1_History.txt - Gone"; git push 
  321  history > Day1_History.txt
  322  git add . ; git commit -m "Day1_History.txt"; git push 
  323  git log --oneline 
  324  git log --oneline | wc -l 
  325  git log --oneline --graph 
  326  git log
  327  git log --oneline
  328  git log --oneline --graph 
  329  git shortlog
  330  ls
  331  git branch 
  332  git branch --help
  333  git branch 
  334  git branch -d testing
  335  git branch 
  336  git branch -d test-branch
  337  git branch -d devlopment
  338  l
  339  git branch 
  340  git logs
  341  git log
  342  ls
  343  git tag testapp_r1_20200504
  344  ls
  345  rm -rf Dev.txt 
  346  git add . ; git commit -m "Dev.txt-Removed"
  347  rm -rf Test.txt 
  348  git add . ; git commit -m "Test.txt-Removed"
  349  ls
  350  rm -rf README.md 
  351  git add . ; git commit -m "README-Removed"
  352  ls
  353  git log
  354  ls
  355  cat .git/HEAD 
  356  cat .git/refs/heads/master
  357  git tags 
  358  git tag
  359  cat .git/refs/tags/testapp_r1_20200504 
  360  git log 
  361  git tag testapp_r2_20200504
  362  ls
  363  rm -rf Hello.txt 
  364  ls
  365  git add . ; git commit -m "Hello-Removed"
  366  git push 
  367  git push --tags 
  368  ls
  369  history > Day1_History.txt 
