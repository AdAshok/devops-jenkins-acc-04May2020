node {
    
    stage('Git CheckOut') {
      git branch: 'demo-code', url: 'https://github.com/amitvashisttech/devops-jenkins-acc-04May2020.git'
    }
    
    def project_path = "02-Jenkins/petclinic-code"
    
    dir(project_path) {
    stage('Maven Clean') {
    sh label: '', script: 'mvn clean'
    }
    
    stage('Maven Verify') {
    sh label: '', script: 'mvn verify'
     }
     
    stage('Code Coverage') {
     publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'target/site/jacoco/', reportFiles: 'index.html', reportName: 'Code Coverage Report', reportTitles: ''])
    }
    
    stage('Publish Test') {
    junit allowEmptyResults: true, testResults: 'target/surefire-reports/TEST-*.xml'
    }



    stage('Deployment to Docker Env.') {
    sh label: '', script: 'docker-compose up -d --build'
    }

    } 

    stage('Archive Artifacts') { 
    archiveArtifacts '02-Jenkins/petclinic-code/target/*.war'
    }
   
    stage('Getting Ready For Ansible') {
    sh label: '', script: 'cp -rf 02-Jenkins/petclinic-code/target/*.war 04-Ansible/06-Site/roles/tomcat/files/petclinic.war'
    sh label: '', script: "echo '<h1>JENKINS_TASK_ID: '${env.JOB_NAME}[${env.BUILD_NUMBER}]'</h1>' > 04-Ansible/06-Site/roles/tomcat/templates/info.j2"
    }


    stage('Ansible Deploymemy') {
    sh label: '', script: 'cd  04-Ansible/06-Site/; ansible-playbook site.yaml'
    }
    
    
}
